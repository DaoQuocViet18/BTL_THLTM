/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package admin_form;

import data.DataAccess;
import data.KetNoi;
import java.sql.*;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class form_ad_lop_JPanel extends javax.swing.JPanel {

  
    /**
     * Creates new form form_ad_lop_JPanel
     */
    public form_ad_lop_JPanel() {
        initComponents();
        loadDataToTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void loadComboTenNganh() {
        try {
            Connection kn = KetNoi.KNCSDL();
            String sql = "select TenNganh from nganh";
            Statement stm = kn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while (rs.next()) {
                cbTenNganh.addItem(rs.getString("TenNganh"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void loadDataToTable() {
        try {
            Connection kn = KetNoi.KNCSDL();
            String sql = "SELECT lop.MaLop, lop.TenLop, nganh.TenNganh, lop.TenCoVanHocTap "
                    + "FROM lop "
                    + "INNER JOIN nganh ON lop.MaNganh = nganh.MaNganh "
                    + "WHERE MaLop NOT LIKE 'L00' ";
            Statement stm = kn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            DefaultTableModel dtm = (DefaultTableModel) tb_lop.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Object objliss[] = {
                    rs.getString("MaLop"),
                    rs.getString("TenLop"),
                    rs.getString("TenNganh"),
                    rs.getString("TenCoVanHocTap")
                };
                dtm.addRow(objliss);
            }
            tb_lop.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTKT = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        cbTenNganh = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtMaLop = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTL = new javax.swing.JTextField();
        txtTCVHT = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_lop = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã Lớp");

        jLabel2.setText("Tên lớp:");

        jLabel3.setText("Tên ngành");

        jLabel4.setText("Tên cố vấn học tập:");

        tb_lop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã lớp", "Tên lớp", "Mã ngành", "Tên cố vấn học tập"
            }
        ));
        tb_lop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_lopMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_lop);

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel5.setText("Tìm kiếm theo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 618, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(36, 36, 36))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(60, 60, 60)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(36, 36, 36)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtMaLop, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                    .addComponent(txtTKT)
                    .addComponent(txtTCVHT, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTenNganh, 0, 304, Short.MAX_VALUE)
                    .addComponent(txtTL))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(btnTimKiem))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMaLop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnThem)
                        .addGap(20, 20, 20)
                        .addComponent(btnSua)
                        .addGap(26, 26, 26)
                        .addComponent(btnXoa))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cbTenNganh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTCVHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTKT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        // Lấy dữ liệu từ trường nhập liệu tìm kiếm
        String timKiem = txtTKT.getText();

        try {
            Connection kn = KetNoi.KNCSDL();
            // Câu lệnh SQL để tìm kiếm dữ liệu
            String sql = "SELECT lop.MaLop, lop.TenLop, nganh.TenNganh, lop.TenCoVanHocTap "
            + "FROM lop INNER JOIN nganh ON lop.MaNganh = nganh.MaNganh "
            + "WHERE lop.MaLop LIKE ? OR nganh.TenNganh LIKE ?";
            PreparedStatement ps = kn.prepareStatement(sql);
            ps.setString(1, "%" + timKiem + "%");
            ps.setString(2, "%" + timKiem + "%");

            // Thực thi câu lệnh SQL
            ResultSet rs = ps.executeQuery();
            DefaultTableModel dtm = (DefaultTableModel) tb_lop.getModel();
            dtm.setRowCount(0); // Xóa các hàng cũ
            while (rs.next()) {
                Object objliss[] = {
                    rs.getString("MaLop"),
                    rs.getString("TenLop"),
                    rs.getString("TenNganh"),
                    rs.getString("TenCoVanHocTap")
                };
                dtm.addRow(objliss);
            }
            tb_lop.setModel(dtm);
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        // Lấy dữ liệu từ các trường nhập liệu
        String maLop = txtMaLop.getText();
        String tenLop = txtTL.getText();
        String tenNganh = (String) cbTenNganh.getSelectedItem();
        String tenCoVanHocTap = txtTCVHT.getText();

        try {
            Connection kn = KetNoi.KNCSDL();
            // Tìm mã ngành từ tên ngành
            String sqlFindMaNganh = "SELECT MaNganh FROM nganh WHERE TenNganh = ?";
            PreparedStatement psFindMaNganh = kn.prepareStatement(sqlFindMaNganh);
            psFindMaNganh.setString(1, tenNganh);
            ResultSet rsFindMaNganh = psFindMaNganh.executeQuery();
            String maNganh = "";
            if (rsFindMaNganh.next()) {
                maNganh = rsFindMaNganh.getString("MaNganh");
            }

            // Câu lệnh SQL để cập nhật dữ liệu
            String sql = "UPDATE lop SET TenLop = ?, MaNganh = ?, TenCoVanHocTap = ? WHERE MaLop = ?";
            PreparedStatement ps = kn.prepareStatement(sql);
            ps.setString(1, tenLop);
            ps.setString(2, maNganh);
            ps.setString(3, tenCoVanHocTap);
            ps.setString(4, maLop);

            // Thực thi câu lệnh SQL
            int rowsUpdated = ps.executeUpdate();
            if (rowsUpdated > 0) {
                //System.out.println("Sửa lớp thành công!");
                // Cập nhật lại bảng sau khi sửa dữ liệu
                loadDataToTable();
            }
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here
        // Lấy mã lớp từ trường nhập liệu
        String maLop = txtMaLop.getText();

        try {
            Connection kn = KetNoi.KNCSDL();
            // Câu lệnh SQL để xóa dữ liệu
            String sql = "DELETE FROM lop WHERE MaLop = ?";
            PreparedStatement ps = kn.prepareStatement(sql);
            ps.setString(1, maLop);

            // Thực thi câu lệnh SQL
            int rowsDeleted = ps.executeUpdate();
            if (rowsDeleted > 0) {
                //System.out.println("Xóa lớp thành công!");
                // Cập nhật lại bảng sau khi xóa dữ liệu
                loadDataToTable();
            }
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tb_lopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_lopMouseClicked
        // TODO add your handling code here:
        int selectedRow = tb_lop.getSelectedRow();
        if (selectedRow != -1) {
            // Lấy thông tin từ dòng được chọn trong bảng
            String malop = (String) tb_lop.getValueAt(selectedRow, 0);
            String tenlop = (String) tb_lop.getValueAt(selectedRow, 1);
            String tenNganh = (String) tb_lop.getValueAt(selectedRow, 2);
            String tencovan = (String) tb_lop.getValueAt(selectedRow, 3);

            // Ánh xạ thông tin lên các textfield và combobox tương ứng
            txtMaLop.setText(malop);
            txtTL.setText(tenlop);
            cbTenNganh.setSelectedItem(tenNganh);
            txtTCVHT.setText(tencovan);
        }
    }//GEN-LAST:event_tb_lopMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        // Lấy dữ liệu từ các trường nhập liệu
        String maLop = txtMaLop.getText();
        String tenLop = txtTL.getText();
        String tenNganh = (String) cbTenNganh.getSelectedItem();
        String tenCoVanHocTap = txtTCVHT.getText();

        try {
            Connection kn = KetNoi.KNCSDL();
            String sqlFindMaNganh = "SELECT MaNganh FROM nganh WHERE TenNganh = ?";
            PreparedStatement psFindMaNganh = kn.prepareStatement(sqlFindMaNganh);
            psFindMaNganh.setString(1, tenNganh);
            ResultSet rsFindMaNganh = psFindMaNganh.executeQuery();
            String maNganh = "";
            if (rsFindMaNganh.next()) {
                maNganh = rsFindMaNganh.getString("MaNganh");
            }

            // Câu lệnh SQL để chèn dữ liệu
            String sql = "INSERT INTO lop (MaLop, TenLop, MaNganh, TenCoVanHocTap) VALUES (?, ?, ?, ?)";
            PreparedStatement ps = kn.prepareStatement(sql);
            ps.setString(1, maLop);
            ps.setString(2, tenLop);
            ps.setString(3, maNganh);
            ps.setString(4, tenCoVanHocTap);

            // Thực thi câu lệnh SQL
            int rowsInserted = ps.executeUpdate();
            if (rowsInserted > 0) {
                //System.out.println("Thêm lớp thành công!");
                // Cập nhật lại bảng sau khi thêm dữ liệu
                loadDataToTable();
            }
        } catch (SQLException ex) {
            Logger.getLogger(form_ad_lop_JPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnThemActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbTenNganh;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_lop;
    private javax.swing.JTextField txtMaLop;
    private javax.swing.JTextField txtTCVHT;
    private javax.swing.JTextField txtTKT;
    private javax.swing.JTextField txtTL;
    // End of variables declaration//GEN-END:variables
}
